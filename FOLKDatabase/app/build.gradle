apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.google.firebase.firebase-perf'

int MILLIS_IN_MINUTE = 1000 * 60
int minutesSinceEpoch = System.currentTimeMillis() / MILLIS_IN_MINUTE

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.singularitycoder.folkdatabase"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    // The defaultConfig values above are fixed so ur incremental builds don't need to rebuild the manifest n whole APK slowing build times. But for release builds its ok. So below script iterates through all the known variants, finds those that are "release" build types n changes those properties to something dynamic.
    applicationVariants.all { variant ->
        if (variant.buildType.name == "release") {
//            variant.mergedFlavor.versionCode = minutesSinceEpoch
//            variant.mergedFlavor.versionName = minutesSinceEpoch + "-" + variant.flavorName
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            crunchPngs false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            ext.enableCrashlytics = true
            ext.alwaysUpdateBuildId = true
            FirebasePerformance {
                instrumentationEnabled true
            }
        }
    }

    // When building a variant that uses this flavor, the following configurations override those in the defaultConfig block.
    flavorDimensions "external", "internal"
    productFlavors {
        dev {
            dimension "external"
        }

        prod {
            dimension "external"
        }

        demo {
            dimension "internal"
        }

        full {
            dimension "internal"
        }
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    // Improves Gradle build times
    dexOptions {
        javaMaxHeapSize "4g"
    }

    // Data Binding
    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'

    // Local Unit Testing
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'

    // Mockito for Local Unit Testing
    implementation 'org.mockito:mockito-core:2.19.0'
    testImplementation 'androidx.arch.core:core-testing:2.1.0'

    // Mockito for Instrumentation/Android Testing
    implementation 'org.mockito:mockito-android:2.19.0'

    // Instrumentation/Android Testing
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.annotation:annotation:1.1.0'
    androidTestImplementation 'com.google.firebase:firebase-appindexing:19.1.0'

    // Espresso for Instrumentation/Android UI Testing
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    // Espresso Testing Recycler
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.2.0'
    implementation 'androidx.test.espresso:espresso-idling-resource:3.2.0'

    // UI Automator Tests
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'

    // Constraint layout
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    // Design
    implementation 'com.google.android.material:material:1.1.0'

    // Recycler View
    implementation 'androidx.recyclerview:recyclerview:1.1.0'

    // Swipe Refresh
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.0.0'

    // Card View
    implementation 'androidx.cardview:cardview:1.0.0'

    // Color Palette
    implementation 'androidx.palette:palette:1.0.0'

    // Glide Image Loader
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'

    // Fresco Image Loader
    implementation 'com.github.stfalcon:stfalcon-imageviewer:1.0.0'

    // Facebook Fresco for animated GIF, WebP, animated WebP support
    implementation 'com.facebook.fresco:fresco:2.0.0'
    implementation 'com.facebook.fresco:animated-gif:2.0.0'
    implementation 'com.facebook.fresco:animated-webp:2.0.0'
    implementation 'com.facebook.fresco:webpsupport:2.0.0'

    // Circular Image
    implementation 'com.mikhaellopez:circularimageview:4.0.1'

    // Text Drawable for letter images
    implementation 'com.amulyakhare:com.amulyakhare.textdrawable:1.0.1'

    // Permissions
    implementation 'com.karumi:dexter:6.0.1'

    // Firebase
    implementation 'com.google.firebase:firebase-firestore:21.4.3'
    implementation "com.google.firebase:firebase-auth:19.3.1"
    implementation 'com.google.firebase:firebase-core:17.4.3'
    implementation 'com.google.firebase:firebase-analytics:17.4.3'
    implementation 'com.google.firebase:firebase-database:19.3.0'
    implementation 'com.google.firebase:firebase-storage:19.1.1'
    implementation 'com.google.firebase:firebase-crashlytics:17.0.1'
    implementation 'com.google.firebase:firebase-perf:19.0.7'
    implementation 'com.google.firebase:firebase-config:19.1.4'

    // Doc and Photo Picker
    implementation 'com.droidninja:filepicker:2.2.1'

    // Facebook Shimmer
    implementation 'com.facebook.shimmer:shimmer:0.5.0'

    // Leak Canary - shows memory leaks
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.2'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.2'

    // Lottie
    implementation 'com.airbnb.android:lottie:3.0.0'

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.7.1'

    // Retrofit GSON Library - Convert JSON response easily with this
    implementation 'com.squareup.retrofit2:converter-gson:2.6.0'

    // Retrofit Scalars Library - For serialising JSON response to String
    implementation 'com.squareup.retrofit2:converter-scalars:2.1.0'

    // Logging
    implementation 'com.squareup.okhttp3:logging-interceptor:4.3.1'

    // Dagger
    implementation "com.google.dagger:dagger:2.27"
    annotationProcessor "com.google.dagger:dagger-compiler:2.24"
    compileOnly 'javax.annotation:jsr250-api:1.0'
    implementation 'javax.inject:javax.inject:1'

    // Dagger Android Studio
    implementation "com.google.dagger:dagger-android:2.23.2"
    annotationProcessor "com.google.dagger:dagger-android-processor:2.24"

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-common-java8:2.2.0"

    // Room DB
    implementation "androidx.room:room-runtime:2.2.5"
    annotationProcessor "androidx.room:room-compiler:2.2.5"
    androidTestImplementation 'androidx.room:room-testing:2.2.5'

    // RxJava
    implementation "io.reactivex.rxjava2:rxjava:2.2.18"

    // RxAndroid
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"

    // RxBinding
    implementation 'com.jakewharton.rxbinding3:rxbinding:3.1.0'

    // RxJava Math
//    implementation "io.reactivex.rxjava-math:1.0.0"

    // RxJava Call Adapter
//    implementation 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'

    // Rx Lifecycle
//    implementation 'androidx.lifecycle:lifecycle-reactivestreams:2.2.0'

    // ButterKnife
    implementation 'com.jakewharton:butterknife:10.1.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.1.0'

    // Timber Logging
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // Work Manager - causes problems without the guava dependency
    implementation "androidx.work:work-runtime:2.3.4"
    implementation group: 'com.google.guava', name: 'guava', version: '27.0.1-android'

    // ACRA crash reporting
    def acraVersion = '5.1.3'
    implementation "ch.acra:acra-http:$acraVersion" // Http
    implementation "ch.acra:acra-mail:$acraVersion" // Email
    implementation "ch.acra:acra-core:$acraVersion" // Custom
    implementation "ch.acra:acra-dialog:$acraVersion" // Dialog
    implementation "ch.acra:acra-notification:$acraVersion" // Notification
    implementation "ch.acra:acra-toast:$acraVersion" // Toast
    implementation "ch.acra:acra-limiter:$acraVersion" // Report sending limiter per device
    implementation "ch.acra:acra-advanced-scheduler:5.2.0-rc1" // report sending scheduler
}
